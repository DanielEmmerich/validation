File,Violation,Line,Column,Check,Entity
"Bitwalker.c","Identifier Bitstream reused","26","82","Identifier name reuse","Bitstream"
"Bitwalker.c","Identifier Bitstream reused","48","77","Identifier name reuse","Bitstream"
"Bitwalker.c","Identifier Bitstream reused","74","87","Identifier name reuse","Bitstream"
"Bitwalker.c","Identifier BitstreamSizeInBytes reused","26","108","Identifier name reuse","BitstreamSizeInBytes"
"Bitwalker.c","Identifier BitstreamSizeInBytes reused","48","103","Identifier name reuse","BitstreamSizeInBytes"
"Bitwalker.c","Identifier Length reused","26","66","Identifier name reuse","Length"
"Bitwalker.c","Identifier Length reused","48","61","Identifier name reuse","Length"
"Bitwalker.c","Identifier Length reused","82","101","Identifier name reuse","Length"
"Bitwalker.c","Identifier Length reused","97","95","Identifier name reuse","Length"
"Bitwalker.c","Identifier Locals reused","74","71","Identifier name reuse","Locals"
"Bitwalker.c","Identifier Locals reused","82","80","Identifier name reuse","Locals"
"Bitwalker.c","Identifier Locals reused","91","77","Identifier name reuse","Locals"
"Bitwalker.c","Identifier Locals reused","97","74","Identifier name reuse","Locals"
"Bitwalker.c","Identifier Locals reused","106","76","Identifier name reuse","Locals"
"Bitwalker.c","Identifier Startposition reused","26","38","Identifier name reuse","Startposition"
"Bitwalker.c","Identifier Startposition reused","48","33","Identifier name reuse","Startposition"
"Bitwalker.c","Identifier Value reused","48","134","Identifier name reuse","Value"
"Bitwalker.c","Identifier Value reused","97","112","Identifier name reuse","Value"
"Bitwalker.c","Identifier i reused","35","21","Identifier name reuse","i"
"Bitwalker.c","Identifier i reused","60","12","Identifier name reuse","i"
"Bitwalker.c","Identifier retval reused","33","17","Identifier name reuse","retval"
"Bitwalker.c","Identifier retval reused","85","17","Identifier name reuse","retval"
"Bitwalker.c","Identifier retval reused","100","12","Identifier name reuse","retval"
"Bitwalker.c","More than 31 characers are significant","82","80","Identifier name significance","Bitwalker_IncrementalWalker_Peek_Next"
"Bitwalker.c","More than 31 characers are significant","91","77","Identifier name significance","Bitwalker_IncrementalWalker_Peek_Finish"
"Bitwalker.c","More than 31 characers are significant","97","74","Identifier name significance","Bitwalker_IncrementalWalker_Poke_Next"
"Bitwalker.c","More than 31 characers are significant","106","76","Identifier name significance","Bitwalker_IncrementalWalker_Poke_Finish"
"Bitwalker.c","Violation: identifier ""Length"" reused in multiple C name spaces.","26","66","No identifier in one name space should have the same spelling as an identifier in another name space.","Length"
"Bitwalker.c","Violation: identifier ""Bitstream"" reused in multiple C name spaces.","26","82","No identifier in one name space should have the same spelling as an identifier in another name space.","Bitstream"
"Bitwalker.c","Violation: C99 style comment found: // switch between easily debugable code and compact code with reduced number of local variables and intensified bit manipulation","22","0","Only use /* comments",""
"Bitwalker.c","Violation: C99 style comment found: // plausibility check: is last byte in range","28","8","Only use /* comments",""
"Bitwalker.c","Violation: C99 style comment found: // error: index out of range","30","32","Only use /* comments",""
"Bitwalker.c","Violation: C99 style comment found: // Everything ok, we can iterate bitwise","32","8","Only use /* comments",""
"Bitwalker.c","Violation: C99 style comment found: // tricky conversion bool to int (Zero or One):","40","72","Only use /* comments",""
"Bitwalker.c","Violation: C99 style comment found: // false == 0, true == 1 ==> if bit is set, than 1, else 0","41","128","Only use /* comments",""
"Bitwalker.c","Violation: C99 style comment found: // plausibility check: is last byte in range","50","8","Only use /* comments",""
"Bitwalker.c","Violation: C99 style comment found: // error: index out of range","52","32","Only use /* comments",""
"Bitwalker.c","Violation: C99 style comment found: // plausibility check: is value in range","54","8","Only use /* comments",""
"Bitwalker.c","Violation: C99 style comment found: // error: value to big for bit field","57","40","Only use /* comments",""
"Bitwalker.c","Violation: C99 style comment found: // Everything ok, we can iterate bitwise from left to right","59","8","Only use /* comments",""
"Bitwalker.c","Violation: C99 style comment found: //prepare next iteration with value without written bit","67","32","Only use /* comments",""
"Bitwalker.c","Violation: C99 style comment found: // plausibility check is done when reading the bits","84","8","Only use /* comments",""
"Bitwalker.c","Violation: C99 style comment found: // plausibility check is done when reading the bits","99","8","Only use /* comments",""
"Bitwalker.c","If statement not enclosed in curly braces { } in Bitwalker.c.","29","71","An if ( condition ) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement","Bitwalker_Peek"
"Bitwalker.c","If statement not enclosed in curly braces { } in Bitwalker.c.","51","71","An if ( condition ) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement","Bitwalker_Poke"
"Bitwalker.c","If statement not enclosed in curly braces { } in Bitwalker.c.","56","28","An if ( condition ) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement","Bitwalker_Poke"
"Bitwalker.c","If statement not enclosed in curly braces { } in Bitwalker.c.","63","39","An if ( condition ) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement","Bitwalker_Poke"
"Bitwalker.c","If statement not enclosed in curly braces { } in Bitwalker.c.","65","16","An if ( condition ) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement","Bitwalker_Poke"
"Bitwalker.c","Multiple exit points from function","26","9","Single exit point at end","Bitwalker_Peek"
"Bitwalker.c","Multiple exit points from function","48","4","Single exit point at end","Bitwalker_Poke"
"Bitwalker.c","U suffix not applied or is not capitalized for unsigned octal or hexadecimal literal 0x80.","24","21","A U suffix shall be applied to all octal or hexadecimal integer literals of unsigned type","C:\Users\Izas\Desktop\Bitwalker\Bitwalker.c"
"Bitwalker.c","U suffix not applied or is not capitalized for unsigned octal or hexadecimal literal 0x07.","38","24","A U suffix shall be applied to all octal or hexadecimal integer literals of unsigned type","Bitwalker_Peek"
"Bitwalker.c","U suffix not applied or is not capitalized for unsigned octal or hexadecimal literal 0x01.","55","17","A U suffix shall be applied to all octal or hexadecimal integer literals of unsigned type","Bitwalker_Poke"
"Bitwalker.c","An object or function with external linkage not declared in a header file or unnamed namespace: retval.","33","17","Objects or functions with external linkage shall be declared in a header file","retval"
"Bitwalker.c","An object or function with external linkage not declared in a header file or unnamed namespace: i.","35","21","Objects or functions with external linkage shall be declared in a header file","i"
"Bitwalker.c","An object or function with external linkage not declared in a header file or unnamed namespace: CurrentValue.","38","24","Objects or functions with external linkage shall be declared in a header file","CurrentValue"
"Bitwalker.c","An object or function with external linkage not declared in a header file or unnamed namespace: MaxValue.","55","17","Objects or functions with external linkage shall be declared in a header file","MaxValue"
"Bitwalker.c","An object or function with external linkage not declared in a header file or unnamed namespace: i.","60","12","Objects or functions with external linkage shall be declared in a header file","i"
"Bitwalker.c","An object or function with external linkage not declared in a header file or unnamed namespace: retval.","85","17","Objects or functions with external linkage shall be declared in a header file","retval"
"Bitwalker.c","An object or function with external linkage not declared in a header file or unnamed namespace: retval.","100","12","Objects or functions with external linkage shall be declared in a header file","retval"
"Bitwalker.c","Violation: Bitwalker_IncrementalWalker_Peek_Next defined but not called.","82","9","Unused Functions","Bitwalker_IncrementalWalker_Peek_Next"
"Bitwalker.c","Violation: Bitwalker_IncrementalWalker_Peek_Finish defined but not called.","91","4","Unused Functions","Bitwalker_IncrementalWalker_Peek_Finish"
"Bitwalker.c","Violation: Bitwalker_IncrementalWalker_Poke_Finish defined but not called.","106","4","Unused Functions","Bitwalker_IncrementalWalker_Poke_Finish"
"Bitwalker.c","Non try block call","85","26","Calls to COTS library functions that might throw an exception must be enclosed in a try block.","Bitwalker_Peek"
"Bitwalker.c","Non try block call","100","21","Calls to COTS library functions that might throw an exception must be enclosed in a try block.","Bitwalker_Poke"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_Peek","38","39","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Bitstream"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_Poke","64","25","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Bitstream"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_Poke","65","21","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Bitstream"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_IncrementalWalker_Init","76","8","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Locals"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_IncrementalWalker_Init","77","8","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Locals"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_IncrementalWalker_Init","78","8","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Locals"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_IncrementalWalker_Peek_Next","85","41","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Locals"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_IncrementalWalker_Peek_Next","85","77","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Locals"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_IncrementalWalker_Peek_Next","85","96","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Locals"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_IncrementalWalker_Peek_Next","86","8","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Locals"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_IncrementalWalker_Peek_Finish","93","15","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Locals"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_IncrementalWalker_Poke_Next","100","36","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Locals"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_IncrementalWalker_Poke_Next","100","72","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Locals"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_IncrementalWalker_Poke_Next","100","91","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Locals"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_IncrementalWalker_Poke_Next","101","8","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Locals"
"Bitwalker.c","Untested pointer parameter in function Bitwalker_IncrementalWalker_Poke_Finish","108","15","Pointer function parameters must be tested for equality to 0 before accessing the data being pointed to","Locals"
"Bitwalker.c","Violation: basic numerical type ""int"" used.","48","4","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","Bitwalker_Poke"
"Bitwalker.c","Violation: basic numerical type ""int"" used.","91","4","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","Bitwalker_IncrementalWalker_Peek_Finish"
"Bitwalker.c","Violation: basic numerical type ""int"" used.","97","4","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","Bitwalker_IncrementalWalker_Poke_Next"
"Bitwalker.c","Violation: basic numerical type ""int"" used.","106","4","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","Bitwalker_IncrementalWalker_Poke_Finish"
"Bitwalker.c","Violation: basic numerical type ""int"" used in ""unsigned int"".","26","38","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","Startposition"
"Bitwalker.c","Violation: basic numerical type ""int"" used in ""unsigned int"".","26","66","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","Length"
"Bitwalker.c","Violation: basic numerical type ""int"" used in ""unsigned int"".","26","108","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","BitstreamSizeInBytes"
"Bitwalker.c","Violation: basic numerical type ""int"" used in ""unsigned int"".","35","21","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","i"
"Bitwalker.c","Violation: basic numerical type ""int"" used in ""unsigned int"".","48","33","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","Startposition"
"Bitwalker.c","Violation: basic numerical type ""int"" used in ""unsigned int"".","48","61","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","Length"
"Bitwalker.c","Violation: basic numerical type ""int"" used in ""unsigned int"".","48","103","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","BitstreamSizeInBytes"
"Bitwalker.c","Violation: basic numerical type ""int"" used.","60","12","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","i"
"Bitwalker.c","Violation: basic numerical type ""int"" used in ""unsigned int"".","74","113","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","Size"
"Bitwalker.c","Violation: basic numerical type ""int"" used in ""unsigned int"".","74","132","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","FirstBitposition"
"Bitwalker.c","Violation: basic numerical type ""int"" used in ""unsigned int"".","82","101","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","Length"
"Bitwalker.c","Violation: basic numerical type ""int"" used in ""unsigned int"".","97","95","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","Length"
"Bitwalker.c","Violation: basic numerical type ""int"" used.","100","12","Typedefs that indicate size and signedness should be used in place of the basic numerical types.","retval"
"Bitwalker.c","Fixed Value(1) used incorrectly","29","39","Magic Numbers","Length"
"Bitwalker.c","Fixed Value(1) used incorrectly","40","36","Magic Numbers","retval"
"Bitwalker.c","Fixed Value(1) used incorrectly","51","39","Magic Numbers","Length"
"Bitwalker.c","Fixed Value(2) used incorrectly","57","24","Magic Numbers","Value"
"Bitwalker.c","Fixed Value(1) used incorrectly","61","42","Magic Numbers","Length"
"Bitwalker.c","Fixed Value(0x01) used incorrectly","63","29","Magic Numbers","Value"
"Bitwalker.c","Fixed Value(3) used incorrectly","65","36","Magic Numbers","i"
"Bitwalker.c","Fixed Value(1) used incorrectly","67","26","Magic Numbers","Value"
"Bitwalker.c","Fixed Value(0) used incorrectly","70","15","Magic Numbers",""
"Bitwalker.c","Variable conditionally initialized","35","21","Uninitialized Variables","i"
"Bitwalker.c","Variable conditionally initialized","60","12","Uninitialized Variables","i"
"Bitwalker.c","Potential Const: Startposition","26","38","Use Const whenever possible","Startposition"
"Bitwalker.c","Potential Const: Length","26","66","Use Const whenever possible","Length"
"Bitwalker.c","Potential Const: BitstreamSizeInBytes","26","108","Use Const whenever possible","BitstreamSizeInBytes"
"Bitwalker.c","Potential Const: Startposition","48","33","Use Const whenever possible","Startposition"
"Bitwalker.c","Potential Const: Length","48","61","Use Const whenever possible","Length"
"Bitwalker.c","Potential Const: BitstreamSizeInBytes","48","103","Use Const whenever possible","BitstreamSizeInBytes"
"Bitwalker.c","Potential Const: Size","74","113","Use Const whenever possible","Size"
"Bitwalker.c","Potential Const: FirstBitposition","74","132","Use Const whenever possible","FirstBitposition"
"Bitwalker.c","Potential Const: Length","82","101","Use Const whenever possible","Length"
"Bitwalker.c","Potential Const: Length","97","95","Use Const whenever possible","Length"
"Bitwalker.c","Potential Const: retval","100","12","Use Const whenever possible","retval"
"Bitwalker.c","No comment with variable declaration","35","21","Variables should be commented","i"

